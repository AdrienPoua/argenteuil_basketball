import { toDomain as toDomainTeam, toPersistence as toPersistenceTeam } from "./team.mapper"
import { MatchEntity } from "../../../domain/entities/match.entity"
import { MatchDTO } from "../dtos/match.dto"

export function toDomain(data: MatchDTO): MatchEntity {
  return new MatchEntity({
    id: data.id,
    numero: data.numero,
    numeroJournee: data.numero_journee,
    idPoule: data.id_poule,
    idOrganismeEquipe1: data.id_organisme_equipe_1,
    idOrganismeEquipe2: data.id_organisme_equipe_2,
    nomEquipe1: data.nom_equipe_1,
    nomEquipe2: data.nom_equipe_2,
    idEngagementEquipe1: data.id_engagement_equipe_1,
    idEngagementEquipe2: data.id_engagement_equipe_2,
    resultatEquipe1: data.resultat_equipe_1,
    resultatEquipe2: data.resultat_equipe_2,
    horaire: data.horaire,
    date: data.date,
    dateSaisieResultat: data.date_saisie_resultat,
    creation: data.creation,
    validee: data.validee,
    remise: data.remise,
    joue: data.joue,
    handicap1: data.handicap_1,
    handicap2: data.handicap_2,
    salle: data.salle,
    penaliteEquipe1: data.penalite_equipe_1,
    penaliteEquipe2: data.penalite_equipe_2,
    forfaitEquipe1: data.forfait_equipe_1,
    forfaitEquipe2: data.forfait_equipe_2,
    defautEquipe1: data.defaut_equipe_1,
    defautEquipe2: data.defaut_equipe_2,
    etat: data.etat,
    arbitre1: data.arbitre_1,
    arbitre2: data.arbitre_2,
    marqueur: data.marqueur,
    chronometreur: data.chronometreur,
    isAmical: data.is_amical,
    team: data.team ? toDomainTeam(data.team) : null,
    codeMatch: data.code_match,
    created_at: data.created_at,
    modification: data.modification,
  })
}

export function toPersistence(entity: MatchEntity): MatchDTO {
  return {
    id: entity.id,
    numero: entity.numero,
    numero_journee: entity.numeroJournee,
    id_poule: entity.idPoule,
    id_organisme_equipe_1: entity.idOrganismeEquipe1,
    id_organisme_equipe_2: entity.idOrganismeEquipe2,
    nom_equipe_1: entity.nomEquipe1,
    nom_equipe_2: entity.nomEquipe2,
    id_engagement_equipe_1: entity.idEngagementEquipe1,
    id_engagement_equipe_2: entity.idEngagementEquipe2,
    resultat_equipe_1: entity.resultatEquipe1,
    resultat_equipe_2: entity.resultatEquipe2,
    date: entity.date,
    horaire: entity.horaire,
    date_saisie_resultat: entity.dateSaisieResultat,
    creation: entity.creation,
    validee: entity.validee,
    remise: entity.remise,
    joue: entity.joue,
    handicap_1: entity.handicap1,
    handicap_2: entity.handicap2,
    arbitre_1: entity.arbitre1,
    arbitre_2: entity.arbitre2,
    marqueur: entity.marqueur,
    chronometreur: entity.chronometreur,
    is_amical: entity.isAmical,
    team: entity.team ? toPersistenceTeam(entity.team) : null,
    code_match: entity.codeMatch,
    created_at: entity.created_at,
    modification: entity.modification,
    salle: entity.salle,
    penalite_equipe_1: entity.penaliteEquipe1,
    penalite_equipe_2: entity.penaliteEquipe2,
    forfait_equipe_1: entity.forfaitEquipe1,
    forfait_equipe_2: entity.forfaitEquipe2,
    defaut_equipe_1: entity.defautEquipe1,
    defaut_equipe_2: entity.defautEquipe2,
    etat: entity.etat,
  }
}
